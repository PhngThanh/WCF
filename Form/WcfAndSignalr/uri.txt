using POS.Repository.Entities;
using System;
using System.Collections.Generic;
using System.Linq;
using System.ServiceModel;
using System.ServiceModel.Activation;
using System.ServiceModel.Web;
using System.Text;
using System.Threading.Tasks;

namespace WcfAndSignalr.Interfaces
{
    [ServiceContract]
    public interface IProductService
    {
        #region get products with filter
        [OperationContract]
        [WebInvoke(Method = "GET",
               ResponseFormat = WebMessageFormat.Json,
            RequestFormat = WebMessageFormat.Json)
            ]
        WcfAndSignalr.Response.BaseResponse<IEnumerable<Product>> Gets();
        #endregion
        #region get count
        [OperationContract]
        [WebInvoke(Method = "GET",
               ResponseFormat = WebMessageFormat.Json,
            RequestFormat = WebMessageFormat.Json,
               UriTemplate = "/count")]
        WcfAndSignalr.Response.BaseResponse<int> GetCount();
        #endregion
        #region get product by id
        [OperationContract]
        [WebInvoke(Method = "GET",
               ResponseFormat = WebMessageFormat.Json,
            RequestFormat = WebMessageFormat.Json,
               UriTemplate = "{id}")]
        WcfAndSignalr.Response.BaseResponse<Product>  GetById(string id);
        #endregion
        #region add product
        [OperationContract]
        [WebInvoke(Method = "POST",
               ResponseFormat = WebMessageFormat.Json,
            RequestFormat = WebMessageFormat.Json)]
        WcfAndSignalr.Response.BaseResponse<Product> Add(Product t);
        #endregion
        #region edit product
        [OperationContract]
        [WebInvoke(Method = "PUT",
               ResponseFormat = WebMessageFormat.Json,
            RequestFormat = WebMessageFormat.Json,
               UriTemplate = "{id}")]
        WcfAndSignalr.Response.BaseResponse<Product> Edit(Product t, string id);
        #endregion
        #region delete product
        [OperationContract]
        [WebInvoke(Method = "DELETE",
               ResponseFormat = WebMessageFormat.Json,
            RequestFormat = WebMessageFormat.Json,
               UriTemplate = "{id}")]
        WcfAndSignalr.Response.BaseResponse<Boolean> Delete(string id);
        #endregion
    }
}
